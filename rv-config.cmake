SET ( PROJ_NAME rv )

FIND_PACKAGE(LLVM REQUIRED)

IF( NOT LLVM_FOUND )
  MESSAGE(FATAL_ERROR "LLVM not found.")
ENDIF( NOT LLVM_FOUND )

FIND_PATH ( RV_ROOT_DIR rv-config.cmake PATHS ${RV_DIR} $ENV{RV_DIR} $ENV{RV_ROOT} )
SET ( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${RV_ROOT_DIR} )

SET ( RV_OUTPUT_LIBS WFV.lib WFV.so WFV.dll libWFV libWFV.so libWFV.a libWFV.dll )

FIND_PATH ( RV_INCLUDE_DIR NAMES wfvInterface.h wfvInterface_C.h PATHS ${RV_ROOT_DIR}/include ${RV_ROOT_DIR}/build/include )
FIND_PATH ( RV_LIBRARY_DIR NAMES ${RV_OUTPUT_LIBS} PATHS ${RV_ROOT_DIR}/lib ${RV_ROOT_DIR}/build/lib )

IF ( RV_LIBRARY_DIR )
    FIND_LIBRARY ( RV_LIBRARIES NAMES ${RV_OUTPUT_LIBS} PATHS ${RV_LIBRARY_DIR} )
ENDIF ( RV_LIBRARY_DIR )

IF ( RV_INCLUDE_DIR AND RV_LIBRARIES )
    SET ( RV_FOUND TRUE CACHE BOOL "" FORCE )
ELSE ( RV_INCLUDE_DIR AND RV_LIBRARIES )
    SET ( RV_FOUND FALSE CACHE BOOL "" FORCE )
ENDIF ( RV_INCLUDE_DIR AND RV_LIBRARIES )

INCLUDE ( rv-shared )

MARK_AS_ADVANCED ( RV_FOUND )

